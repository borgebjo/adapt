import os

Import('env')

def filtered_glob(env, pattern, omit=[],
  ondisk=True, source=False, strings=False):
    return filter(
      lambda f: os.path.basename(f.path) not in omit,
      env.Glob(pattern))

objects = [[], []] #contains [[objects], [testobjects]]
objects.append(SConscript('math/SConscript'))
objects.append(SConscript('line/SConscript'))

cppfiles = filtered_glob(env, "*.cpp", omit = "main.cpp")
objects.append([[env.Object(cppfiles)], [env.Object(Glob('test/*.cpp'))]])
adapt = env.Program('adapt', objects[0] + env.Object("main.cpp"))

testapp = env.Program('unit_test_runner', objects)

Return('adapt', 'testapp')
