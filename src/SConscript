import os

Import('env')

def filtered_glob(env, pattern, omit=[],
  ondisk=True, source=False, strings=False):
    return filter(
      lambda f: os.path.basename(f.path) not in omit,
      env.Glob(pattern))

sub_directories = ['math', 'line']
objects = [[], []] #contains [[objects], [testobjects]]
for directory in sub_directories:
    dir_objects = SConscript('%s/SConscript' % (directory))
    objects[0].append(dir_objects[0])
    objects[1].append(dir_objects[1])

cppfiles = filtered_glob(env, "*.cpp", omit = "main.cpp")
objects[0].append(env.Object(cppfiles))
adapt = env.Program('adapt', objects[0] + env.Object("main.cpp"))

objects[1].append(env.Object(Glob('test/*.cpp')))

testapp = env.Program('unit_test_runner', objects)

Return('adapt', 'testapp')
